-- MySQL Script generated by MySQL Workbench
-- Sat Feb 24 00:47:18 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema FeedbackSystem
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `FeedbackSystem` ;

-- -----------------------------------------------------
-- Schema FeedbackSystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FeedbackSystem` DEFAULT CHARACTER SET utf8 ;
USE `FeedbackSystem` ;

-- -----------------------------------------------------
-- Table `FeedbackSystem`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`role` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`role` (
  `role_name` VARCHAR(15) NOT NULL,
  `role_status` VARCHAR(15) NULL,
  PRIMARY KEY (`role_name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`user_mst`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`user_mst` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`user_mst` (
  `user_id` VARCHAR(12) NOT NULL,
  `user_name` VARCHAR(30) NOT NULL,
  `user_pass` VARCHAR(15) NOT NULL,
  `user_email` VARCHAR(45) NOT NULL,
  `user_contact` VARCHAR(13) NOT NULL,
  `fk_user_role` VARCHAR(15) REFERENCES `FeedbackSystem`.`role` (`role_name`),
  `user_gender` VARCHAR(6) NOT NULL,
  `user_title` VARCHAR(5) NULL,
  `user_yoj` int(4) NOT NULL,
  `user_yol` int(4) NOT NULL,
  
  PRIMARY KEY (`user_id`),
  INDEX `user_type_idx` (`fk_user_role` ASC)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`semester`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`semester` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`semester` (
  `semester_id` INT NOT NULL auto_increment,
  `semester_name` VARCHAR(5) NULL,
  `semester_status` VARCHAR(15) NULL,
  `semester_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`semester_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`rights`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`rights` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`rights` (
  `rights_id` INT NOT NULL auto_increment,
  `rights_name` VARCHAR(45) NOT NULL,
  `rights_status` VARCHAR(45) NOT NULL,
  `screenname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`rights_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`subject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`subject` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`subject` (
  `subject_id` INT NOT NULL auto_increment,
  `subject_name` VARCHAR(45) NOT NULL,
  `subject_code` INT NOT NULL unique,
  `subject_status` VARCHAR(15) NULL,
  `subject_type` VARCHAR(35) NULL,
  PRIMARY KEY (`subject_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`mt_user_subject_semester`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`mt_user_subject_semester` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`mt_user_subject_semester` (
  `ussm_id` INT NOT NULL auto_increment,
  `ussm_section` INT NOT NULL,
  `fk_user_id` VARCHAR(12) NOT NULL,
  `fk_semester_id` INT NOT NULL,
  `fk_subject_id` INT NOT NULL,
  PRIMARY KEY (`ussm_id`),
  INDEX `subject_id_idx` (`fk_subject_id` ASC),
  INDEX `semester_id_idx` (`fk_semester_id` ASC),
  INDEX `fk_user_id_idx` (`fk_user_id` ASC),
  CONSTRAINT `fk_subject_id`
    FOREIGN KEY (`fk_subject_id`)
    REFERENCES `FeedbackSystem`.`subject` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_semester_id`
    FOREIGN KEY (`fk_semester_id`)
    REFERENCES `FeedbackSystem`.`semester` (`semester_id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`fk_user_id`)
    REFERENCES `FeedbackSystem`.`user_mst` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`mt_role_right`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`mt_role_right` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`mt_role_right` (
  `rrm_id` int NOT NULL auto_increment,
  `fk_role_name` VARCHAR(15) NOT NULL REFERENCES `FeedbackSystem`.`role` (`role_name`),
  `fk_rights_id` INT NOT NULL REFERENCES `FeedbackSystem`.`rights` (`rights_id`),
  PRIMARY KEY (`rrm_id`),
  INDEX `rights_id_idx` (`fk_rights_id` ASC),
  INDEX `role_name_idx` (`fk_role_name` ASC)
  )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `FeedbackSystem`.`question`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`question` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`question` (
  `ques_id` INT NOT NULL auto_increment,
  `ques_name` VARCHAR(256) NOT NULL,
  `ques_type` VARCHAR(6) NOT NULL,
  `ques_usage` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`ques_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`form`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`form` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`form` (
  `form_id` INT NOT NULL auto_increment,
  `form_name` VARCHAR(45) NOT NULL unique,
  `fk_form_subject` INT NOT NULL REFERENCES `FeedbackSystem`.`subject` (`subject_id`),
  `fk_form_teacher` VARCHAR(12) NOT NULL REFERENCES `FeedbackSystem`.`user_mst` (`user_id`),
  `fk_tracker_id` int not null references `FeedbackSystem`.`feedback_tracker`(`ft_id`),
  `form_status` VARCHAR(15) NULL,
  PRIMARY KEY (`form_id`),
  INDEX `form_subject_idx` (`fk_form_subject` ASC),
  INDEX `form_teacher_idx` (`fk_form_teacher` ASC)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`mt_form_question`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`mt_form_question` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`mt_form_question` (
  `fq_form_id` INT NOT NULL REFERENCES `FeedbackSystem`.`form` (`form_id`),
  `fq_ques_id` INT NOT NULL  REFERENCES `FeedbackSystem`.`question` (`ques_id`),
  INDEX `form_id_idx` (`fq_form_id` ASC),
  INDEX `ques_idx` (`fq_ques_id` ASC)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FeedbackSystem`.`feedback_tracker`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`feedback_tracker` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`feedback_tracker` (
  `ft_id` INT NOT NULL auto_increment,
  `batch` VARCHAR(9) NOT NULL,
  `semester` INT(1) NOT NULL,
  `ft_start_date` DATETIME NOT NULL,
  `ft_end_date` DATETIME NOT NULL,
  `ft_critical_date` DATETIME NOT NULL,
  `section` INT(1) NOT NULL,
  PRIMARY KEY (`ft_id`)
  )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `FeedbackSystem`.`feedback_record`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`feedback_record` ;
create table if not exists feedback_record(
feedback_id int primary key auto_increment,
fk_student_id VARCHAR(12) not null references `FeedbackSystem`.`user_mst`(`user_id`),
fk_form_id int not null references `FeedbackSystem`.`form`(`form_id`),
feedback_update_time datetime,
feedback_status varchar(45),
feedback_score int not null);

-- -----------------------------------------------------
-- Table `FeedbackSystem`.`feedback_answer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FeedbackSystem`.`feedback_answer` ;

CREATE TABLE IF NOT EXISTS `FeedbackSystem`.`feedback_answer` (
  `answer_id` INT NOT NULL auto_increment,
  `fk_feedback_id` INT NOT NULL references `FeedbackSystem`.`feedback_record`(`feedback_id`),
  `fk_ques_id` INT NOT NULL REFERENCES `FeedbackSystem`.`question` (`ques_id`),
  `answer_mcq` CHAR(1) NOT NULL,
  `answer_text` VARCHAR(512) NULL,
  PRIMARY KEY (`answer_id`),
  INDEX `fk_ques_id_idx` (`fk_ques_id` ASC)
  )
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
